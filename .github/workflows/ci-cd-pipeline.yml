name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'


      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test


      - name: Build Docker image
        run: |
          docker build -t mehmettalha/awsdocker:latest .
          docker build -t mehmettalha/awsdocker:${{ github.sha }} .


      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Push Docker image to DockerHub
        run: |
          docker push mehmettalha/awsdocker:latest
          docker push mehmettalha/awsdocker:${{ github.sha }}


      - name: Copy configuration files to AWS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.CLOUD_HOST }}
          username: ${{ secrets.CLOUD_USERNAME }}
          key: ${{ secrets.CLOUD_SSH_KEY }}
          source: "docker-compose.yml,nginx.conf,Dockerfile"
          target: "/home/${{ secrets.CLOUD_USERNAME }}/awsdocker"


      - name: Update and restart application on AWS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CLOUD_HOST }}
          username: ${{ secrets.CLOUD_USERNAME }}
          key: ${{ secrets.CLOUD_SSH_KEY }}
          script: |
            # Gerekli klasörü oluştur (yoksa)
            mkdir -p /home/${{ secrets.CLOUD_USERNAME }}/awsdocker
            
            # Proje klasörüne git
            cd /home/${{ secrets.CLOUD_USERNAME }}/awsdocker
            
            # En son Docker imajını çek
            docker pull mehmettalha/awsdocker:latest
            
            # docker-compose down ve up ile uygulamayı yeniden başlat
            docker-compose down || true
            docker-compose up -d
            
            # Durum mesajı
            echo "Application updated and restarted successfully"